#!/usr/bin/env bash
#
# Script name: dm-websearch
# Description: Search various search engines (inspired by surfraw).
# Dependencies: dmenu and brave
# GitLab: https://www.gitlab.com/dwt1/dmscripts
# License: https://www.gitlab.com/dwt1/dmscripts/LICENSE
# Contributors: Derek Taylor
#               Ali Furkan Yıldız
#               HostGrady
#               Simon Ingelsson

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

# _path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
# if [[  -f "${_path}/_dm-helper.sh" ]]; then
#   # shellcheck disable=SC1090,SC1091
#   source "${_path}/_dm-helper.sh"
# else
#   # shellcheck disable=SC1090
#   echo "No helper-script found"
# fi

# # script will not hit this if there is no config-file to load
# # shellcheck disable=SC1090
# source "$(get_config)"

# Search engine config 
declare -A websearch
# Syntax:
# websearch[name]="https://www.example.com/search?q="

# Search Engines
websearch[bing]="https://www.bing.com/search?q="
websearch[brave]="https://search.brave.com/search?q="
websearch[duckduckgo]="https://duckduckgo.com/?q="
websearch[gemini search \(https\)]="https://portal.mozz.us/gemini/geminispace.info/search%3F"
websearch[google]="https://www.google.com/search?q="
websearch[qwant]="https://www.qwant.com/?q="
websearch[swisscows]="https://swisscows.com/web?query="
websearch[yandex]="https://yandex.com/search/?text="
# Information/News
websearch[bbcnews]="https://www.bbc.co.uk/search?q="
websearch[cnn]="https://www.cnn.com/search?q="
websearch[googlenews]="https://news.google.com/search?q="
websearch[wikipedia]="https://en.wikipedia.org/w/index.php?search="
websearch[wiktionary]="https://en.wiktionary.org/w/index.php?search="
# Social Media
websearch[reddit]="https://www.reddit.com/search/?q="
websearch[odysee]="https://odysee.com/$/search?q="
websearch[youtube]="https://www.youtube.com/results?search_query="
# Online Shopping
websearch[amazon]="https://www.amazon.com/s?k="
websearch[craigslist]="https://www.craigslist.org/search/sss?query="
websearch[ebay]="https://www.ebay.com/sch/i.html?&_nkw="
websearch[gumtree]="https://www.gumtree.com/search?search_category=all&q="
# Linux
websearch[archaur]="https://aur.archlinux.org/packages/?O=0&K="
websearch[archpkg]="https://archlinux.org/packages/?sort=&q="
websearch[archwiki]="https://wiki.archlinux.org/index.php?search="
websearch[debianpkg]="https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords="
# Development
websearch[github]="https://github.com/search?q="
websearch[gitlab]="https://gitlab.com/search?search="
websearch[googleOpenSource]="https://opensource.google/projects/search?q="
websearch[sourceforge]="https://sourceforge.net/directory/?q="
websearch[stackoverflow]="https://stackoverflow.com/search?q="
# Etc

main() {
  # As this is loaded from other file it is technically not defined
  # shellcheck disable=SC2154 # Choosing  a search engine by name from array above.
  engine=$(printf '%s\n' "${!websearch[@]}" | sort | rofi -dmenu -p 'Choose search engine:' "$@"  -i) || exit 1

  # Getting the URL of the search engine we chose.
  url="${websearch["${engine}"]}"

  # Searching the chosen engine.
  query=$(echo "$engine" | rofi -dmenu -i -p 'Enter search query:')

  query="$(echo -n "${query}" | jq -s -R -r @uri)"
  # Display search results in web browser
  # shellcheck disable=SC2154
  brave "${url}${query}"
  # ${DMBROWSER} "${url}${query}"
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
